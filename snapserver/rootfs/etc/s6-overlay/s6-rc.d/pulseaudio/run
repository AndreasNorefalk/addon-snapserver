#!/command/with-contenv bash

set -euo pipefail

log() {
    local level="$1"
    shift
    printf '[%s] %s\n' "$level" "$*"
}

log_info() {
    log "INFO" "$@"
}

log_warning() {
    log "WARN" "$@"
}

canonical_helper_path() {
    local helper_path="$1"
    local dir link
    local -i guard=0

    while [[ -h "${helper_path}" && guard -lt 32 ]]; do
        link=$(readlink "${helper_path}" 2>/dev/null) || break
        guard+=1
        if [[ "${link}" == /* ]]; then
            helper_path="${link}"
        else
            dir=$(dirname "${helper_path}")
            helper_path="${dir}/${link}"
        fi
    done

    if [[ "${helper_path}" != /* ]]; then
        dir=$(cd "$(dirname "${helper_path}")" 2>/dev/null && pwd -P)
        if [[ -n "${dir}" ]]; then
            helper_path="${dir}/$(basename "${helper_path}")"
        fi
    fi

    printf '%s' "${helper_path}"
}

find_system_helper() {
    local name="$1"
    local resolved=""
    local canonical=""

    if resolved=$(command -v "${name}" 2>/dev/null); then
        if [[ -x "${resolved}" ]]; then
            canonical=$(canonical_helper_path "${resolved}")
            if [[ "${canonical}" != /command/* ]]; then
                printf '%s' "${canonical}"
                return 0
            fi
        fi
    fi

    local candidate
    for candidate in \
        "/usr/bin/${name}" \
        "/usr/sbin/${name}" \
        "/bin/${name}" \
        "/sbin/${name}"; do
        if [[ -x "${candidate}" ]]; then
            canonical=$(canonical_helper_path "${candidate}")
            if [[ "${canonical}" == /command/* ]]; then
                continue
            fi
            printf '%s' "${canonical}"
            return 0
        fi
    done

    return 1
}

log_info "[PA] Preparing runtime directories"
mkdir -p /var/run/pulse/.config/pulse
mkdir -p /run/pulse
mkdir -p /etc/pulse/system.pa.d

if [[ ! -f /var/run/pulse/.config/pulse/cookie ]]; then
    head -c 256 /dev/urandom > /var/run/pulse/.config/pulse/cookie || true
fi

ln -sf /var/run/pulse/.config/pulse/cookie /var/run/pulse/.pulse-cookie

chmod 600 /var/run/pulse/.config/pulse/cookie /var/run/pulse/.pulse-cookie 2>/dev/null || true

chown -R pulse:pulse /var/run/pulse /run/pulse || true

export PULSE_RUNTIME_PATH="/var/run/pulse"
export XDG_RUNTIME_DIR="/var/run/pulse"
export HOME="/var/run/pulse"
export XDG_CONFIG_HOME="/var/run/pulse/.config"
export PULSE_COOKIE="/var/run/pulse/.config/pulse/cookie"
export DBUS_SYSTEM_BUS_ADDRESS="unix:path=/var/run/dbus/system_bus_socket"
export DBUS_SESSION_BUS_ADDRESS="${DBUS_SYSTEM_BUS_ADDRESS}"

log_info "[PA] Waiting for system bus"
for _ in $(seq 1 50); do
    if [[ -S /var/run/dbus/system_bus_socket ]]; then
        break
    fi
    sleep 0.1
done

if [[ ! -S /var/run/dbus/system_bus_socket ]]; then
    log_warning "[PA] system bus socket not available after waiting"
fi

log_info "[PA] Starting PulseAudio"
cmd=(
    pulseaudio
    --exit-idle-time=-1
    --disallow-exit
    --disallow-module-loading
    --log-target=stderr
    --daemonize=no
    -nF
    /etc/pulse/system.pa
)

if helper=$(find_system_helper setpriv); then
    exec "${helper}" --reuid pulse --regid pulse --init-groups "${cmd[@]}"
fi

if helper=$(find_system_helper runuser); then
    exec "${helper}" -u pulse -- "${cmd[@]}"
fi

log_warning "[PA] Falling back to running PulseAudio as root"
exec "${cmd[@]}"
