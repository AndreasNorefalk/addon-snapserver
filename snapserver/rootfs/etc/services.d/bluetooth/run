#!/command/with-contenv bashio

bashio::log.info "[BT] Waiting for system bus"
for _ in $(seq 1 50); do
    if [[ -S /var/run/dbus/system_bus_socket ]]; then
        break
    fi
    sleep 0.1
done

if [[ ! -S /var/run/dbus/system_bus_socket ]]; then
    bashio::log.warning "[BT] system bus socket not available after waiting"
fi

bashio::log.info "[BT] Starting bluetoothd"
if pidof bluetoothd >/dev/null 2>&1; then
    bashio::log.warning "[BT] Detected an existing bluetoothd process on the host. Skipping internal daemon startup."
    exec tail -f /dev/null
fi

cmd=(/usr/lib/bluetooth/bluetoothd --noplugin=sap --nodetach)
"${cmd[@]}" &
bt_pid=$!

# Give the daemon a moment to fail fast (for example when another instance
# already owns the Bluetooth resources on the host).
sleep 1
if ! kill -0 "${bt_pid}" 2>/dev/null; then
    wait "${bt_pid}"
    exit_code=$?
    bashio::log.warning "[BT] bluetoothd failed to start (exit code: ${exit_code}). Continuing without the bundled daemon."
    exec tail -f /dev/null
fi

terminate() {
    local sig=${1:-TERM}
    if kill -0 "${bt_pid}" 2>/dev/null; then
        kill "-${sig}" "${bt_pid}"
    fi
}

trap 'terminate TERM' TERM
trap 'terminate INT' INT
trap 'terminate QUIT' QUIT

wait "${bt_pid}"
exit_code=$?
bashio::log.info "[BT] bluetoothd exited with code ${exit_code}"
exit "${exit_code}"
